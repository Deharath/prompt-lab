# .github/workflows/reusable-build-test.yml
name: Reusable Build & Test

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      labels:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: '18.x'

jobs:
  build:
    runs-on: ${{ fromJson(inputs.labels) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'

      # == OS-Specific Steps ==
      - name: Install native build tools (Linux)
        if: inputs.os == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential python3 python3-dev
          sudo apt-get install -y pkg-config libsqlite3-dev

      - name: Install dependencies (Linux)
        if: inputs.os == 'linux'
        run: pnpm install --frozen-lockfile
        env:
          npm_config_build_from_source: true
          SQLITE3_FORCE_COMPILE: true

      - name: Install dependencies (Windows)
        if: inputs.os == 'windows'
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Upload built app
        uses: actions/upload-artifact@v4
        with:
          name: built-app
          path: .

  lint:
    needs: build
    runs-on: ${{ fromJson(inputs.labels) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'

      - name: Download built app
        uses: actions/download-artifact@v4
        with:
          name: built-app
          path: .

      - name: Install native build tools (Linux)
        if: inputs.os == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential python3 python3-dev
          sudo apt-get install -y pkg-config libsqlite3-dev

      - name: Lint
        run: pnpm -r lint

      - name: Validate datasets
        run: pnpm lint:data

      - name: Security audit
        run: pnpm audit --audit-level moderate

      - name: Check for unused dependencies
        run: pnpm deps:check

  test:
    needs: build
    runs-on: ${{ fromJson(inputs.labels) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'pnpm'

      - name: Download built app
        uses: actions/download-artifact@v4
        with:
          name: built-app
          path: .

      - name: Install native build tools (Linux)
        if: inputs.os == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential python3 python3-dev
          sudo apt-get install -y pkg-config libsqlite3-dev

      - name: Test
        run: pnpm -r test
        env:
          NODE_ENV: test
