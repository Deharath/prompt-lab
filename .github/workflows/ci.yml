# .github/workflows/ci.yml
name: CI

on:
  push:
  pull_request:

jobs:
  # ──────────────────────────────────────────────────────────────────────────
  #  Build / Test on Node 18 & 22
  # ──────────────────────────────────────────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 22.x]

    steps:
      # 1️⃣  Check out repo
      - uses: actions/checkout@v4

      # 2️⃣  Exact pnpm that produced the lock-file
      - uses: pnpm/action-setup@v2
        with:
          version: 10.12.3   # keep in sync with local
          run_install: false # we call pnpm install ourselves

      # 3️⃣  Node + cache
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      # 4️⃣  Cache pnpm store between CI runs
      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.local/share/pnpm/store/v3
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 5️⃣  Install dependencies strictly from the lock-file
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 6️⃣  Quality gates
      - run: pnpm lint
      - run: pnpm tsc
      - run: pnpm test
      - run: pnpm test:e2e

  # ──────────────────────────────────────────────────────────────────────────
  #  Build container & smoke-test it
  # ──────────────────────────────────────────────────────────────────────────
  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: promptlab:test
          load: true        # load image into local docker after build

      - name: Start container
        run: docker run -d --rm --name promptlab -p 3000:3000 promptlab:test

      # Wait (max 30 s) for the API to answer /health
      - name: Wait for API to be ready
        run: |
          for i in {1..10}; do
            if curl -sf http://localhost:3000/health | grep -q '"status":"ok"'; then
              echo "API is up ✔️"
              exit 0
            fi
            echo "API not up yet… retrying ($i/10)"
            sleep 3
          done
          echo "API never started" >&2
          docker logs promptlab || true
          exit 1

      - name: Stop container
        if: always()
        run: docker kill promptlab || true
