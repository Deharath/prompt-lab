{
  "name": "@prompt-lab/api",
  "version": "0.1.0",
  "type": "module",
  "main": "./dist/src/index.js",
  "types": "./dist/src/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/src/index.js",
      "types": "./dist/src/index.d.ts"
    }
  },
  "scripts": {
    "dev": "ts-node src/index.ts",
    "build": "tsc",
    "clean": "node -e \"const fs = require('fs'); const path = require('path'); function rmSync(p) { try { fs.rmSync(p, {recursive: true, force: true}); } catch {} } function findAndRemove(dir, exts) { if (!fs.existsSync(dir)) return; fs.readdirSync(dir, {withFileTypes: true}).forEach(dirent => { const fullPath = path.join(dir, dirent.name); if (dirent.isDirectory()) findAndRemove(fullPath, exts); else if (exts.some(ext => fullPath.endsWith(ext))) rmSync(fullPath); }); } findAndRemove('src', ['.js', '.d.ts']); rmSync('dist'); rmSync('tsconfig.tsbuildinfo');\"",
    "test": "echo 'No tests in shared library package - tests are in apps/api'"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@prompt-lab/evaluator": "workspace:*",
    "@xenova/transformers": "^2.17.2",
    "better-sqlite3": "^12.1.1",
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.30.10",
    "express": "^4.21.2",
    "node-cache": "^5.1.2",
    "openai": "^4.50.0",
    "sharp": "^0.34.2",
    "text-readability-ts": "^1.0.11",
    "vader-sentiment": "^1.1.3",
    "wink-tokenizer": "^5.3.0",
    "winston": "^3.17.0",
    "zod": "^3.22.2"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node-cache": "^4.2.5",
    "drizzle-kit": "^0.31.4",
    "rimraf": "^6.0.1",
    "supertest": "^6.3.4",
    "typescript": "^4.9.5",
    "vitest": "^3.2.4"
  }
}
